# This is a basic workflow to help you get started with Actions

name: Development CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ '**', '!master', '!development' ]
  pull_request:
    branches: '**'
    # branches: [ '**', '!master', '!development' ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  NODE_VERSION: '10.x' 

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: Build & Test
    environment: Development
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      # Cache NPM modules??
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      # Run App
      - name: npm install, build, and test
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present
