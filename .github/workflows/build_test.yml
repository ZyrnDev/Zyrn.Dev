name: Development CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ '**', '!master', '!development' ]
  pull_request:
    branches: '**'
    # branches: [ '**', '!master', '!development' ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  NODE_VERSION: '10.x' 

jobs:
  build:
    name: Build & Test
    environment: Development
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      # Cache NPM modules??
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      # Run App
      - name: npm install, build, and test
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present
  test:
    name: "Test"
    runs-on: [ ubuntu-latest ]
    steps:
      - id: "setup"
        name: "Setup"
        run: |
          echo "${{ secrets.SSH_RSA_KEY }}" > ssh_key.temp
          chmod 600 ssh_key.temp
          echo "#!/bin/bash" > command.sh.temp
          echo "pwd" >> command.sh.temp
          echo "whoami" >> command.sh.temp

      - id: "execute"
        name: "Execute SSH Commands"
        run: |
          ssh ${{ secrets.HOST }} -p ${{ secrets.PORT }} -l ${{ secrets.USERNAME }} -i ssh_key.temp < command.sh.temp

      - id: "cleanup"
        name: "Cleanup"
        run: |
          rm ssh_key.temp command.sh.temp

        # host: ${{ secrets.HOST }}
        # username: ${{ secrets.USERNAME }}
        # password: ${{ secrets.PASSWORD }}
        # port: ${{ secrets.PORT }}
        # script: cd ${{ secrets.PROJECT_PATH }} && sudo git fetch origin && sudo git reset --hard origin/master && sudo git pull && sudo npm install && sudo npm run build && sudo systemctl restart ${{ secrets.SERVICE_NAME }}
